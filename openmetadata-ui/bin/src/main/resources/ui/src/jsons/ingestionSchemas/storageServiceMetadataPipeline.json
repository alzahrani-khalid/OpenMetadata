{
  "$id": "https://open-metadata.org/schema/metadataIngestion/storageServiceMetadataPipeline.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "StorageServiceMetadataPipeline",
  "description": "StorageService Metadata Pipeline Configuration.",
  "type": "object",
  "definitions": {
    "storageMetadataConfigType": {
      "description": "Object Store Source Config Metadata Pipeline type",
      "type": "string",
      "enum": [
        "StorageMetadata"
      ],
      "default": "StorageMetadata"
    },
    "noMetadataConfigurationSource": {
      "title": "No Global Manifest",
      "description": "No manifest file available. Ingestion would look for bucket-level metadata file instead",
      "type": "object",
      "additionalProperties": false
    }
  },
  "properties": {
    "type": {
      "description": "Pipeline type",
      "$ref": "#/definitions/storageMetadataConfigType",
      "default": "StorageMetadata"
    },
    "containerFilterPattern": {
      "description": "Regex to only fetch containers that matches the pattern.",
      "type": "object",
      "javaType": "org.openmetadata.schema.metadataIngestion.FilterPattern",
      "properties": {
        "includes": {
          "description": "List of strings/regex patterns to match and include only database entities that match.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "excludes": {
          "description": "List of strings/regex patterns to match and exclude only database entities that match.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false
    },
    "storageMetadataConfigSource": {
      "mask": true,
      "title": "Storage Metadata Configuration Source",
      "oneOf": [
        {
          "$ref": "#/definitions/noMetadataConfigurationSource"
        },
        {
          "$id": "https://open-metadata.org/schema/metadataIngestion/storage/storageMetadataLocalConfig.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Storage Metadata Local Config",
          "description": "Storage Metadata Manifest file path config.",
          "javaType": "org.openmetadata.schema.metadataIngestion.storage.StorageMetadataLocalConfig",
          "type": "object",
          "properties": {
            "manifestFilePath": {
              "title": "Storage Metadata Manifest File Path",
              "description": "Storage Metadata manifest file path to extract locations to ingest from.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "manifestFilePath"
          ]
        },
        {
          "$id": "https://open-metadata.org/schema/metadataIngestion/storage/storageMetadataHttpConfig.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Storage Metadata Http Config",
          "description": "Storage Metadata Manifest file HTTP path config.",
          "javaType": "org.openmetadata.schema.metadataIngestion.storage.StorageMetadataHttpConfig",
          "type": "object",
          "properties": {
            "manifestHttpPath": {
              "title": "Storage Metadata Manifest HTTP Path",
              "description": "Storage Metadata manifest http file path to extract locations to ingest from.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "manifestHttpPath"
          ]
        },
        {
          "$id": "https://open-metadata.org/schema/metadataIngestion/storage/storageMetadataS3Config.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Storage Metadata S3 Config",
          "description": "Storage Metadata Manifest file S3 path config.",
          "javaType": "org.openmetadata.schema.metadataIngestion.storage.StorageMetadataS3Config",
          "type": "object",
          "properties": {
            "securityConfig": {
              "title": "S3 Security Config",
              "$id": "https://open-metadata.org/schema/security/credentials/awsCredentials.json",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "description": "AWS credentials configs.",
              "type": "object",
              "javaType": "org.openmetadata.schema.security.credentials.AWSCredentials",
              "properties": {
                "awsAccessKeyId": {
                  "title": "AWS Access Key ID",
                  "description": "AWS Access key ID.",
                  "type": "string"
                },
                "awsSecretAccessKey": {
                  "title": "AWS Secret Access Key",
                  "description": "AWS Secret Access Key.",
                  "type": "string",
                  "format": "password"
                },
                "awsRegion": {
                  "title": "AWS Region",
                  "description": "AWS Region",
                  "type": "string"
                },
                "awsSessionToken": {
                  "title": "AWS Session Token",
                  "description": "AWS Session Token.",
                  "type": "string"
                },
                "endPointURL": {
                  "title": "Endpoint URL",
                  "description": "EndPoint URL for the AWS",
                  "type": "string",
                  "format": "uri"
                },
                "profileName": {
                  "title": "Profile Name",
                  "description": "The name of a profile to use with the boto session.",
                  "type": "string"
                },
                "assumeRoleArn": {
                  "title": "Role Arn for Assume Role",
                  "description": "The Amazon Resource Name (ARN) of the role to assume. Required Field in case of Assume Role",
                  "type": "string"
                },
                "assumeRoleSessionName": {
                  "title": "Role Session Name for Assume Role",
                  "description": "An identifier for the assumed role session. Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. Required Field in case of Assume Role",
                  "type": "string",
                  "default": "OpenMetadataSession"
                },
                "assumeRoleSourceIdentity": {
                  "title": "Source Identity for Assume Role",
                  "description": "The Amazon Resource Name (ARN) of the role to assume. Optional Field in case of Assume Role",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "awsRegion"
              ]
            },
            "prefixConfig": {
              "title": "Storage Metadata Prefix Config",
              "$id": "https://open-metadata.org/schema/metadataIngestion/storage/storageBucketDetails.json",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "description": "Details of the bucket where the storage metadata manifest file is stored",
              "javaType": "org.openmetadata.schema.metadataIngestion.storage.StorageMetadataBucketDetails",
              "type": "object",
              "properties": {
                "containerName": {
                  "title": "Storage Metadata Container Name",
                  "description": "Name of the top level container where the storage metadata file is stored",
                  "type": "string"
                },
                "objectPrefix": {
                  "title": "Storage Metadata Object Prefix",
                  "description": "Path of the folder where the storage metadata file is stored. If the file is at the root, you can keep it empty.",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "containerName"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "prefixConfig"
          ]
        },
        {
          "$id": "https://open-metadata.org/schema/metadataIngestion/storage/storageMetadataS3Config.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Storage Metadata ADLS Config",
          "description": "Storage Metadata Manifest file ADLS path config.",
          "javaType": "org.openmetadata.schema.metadataIngestion.storage.StorageMetadataADLSConfig",
          "type": "object",
          "properties": {
            "securityConfig": {
              "title": "S3 Security Config",
              "$id": "https://open-metadata.org/schema/security/credentials/azureCredentials.json",
              "$schema": "http://json-schema.org/draft-07/schema#",
              "description": "Azure Datalake Credentials",
              "type": "object",
              "javaType": "org.openmetadata.schema.security.credentials.AzureCredentials",
              "properties": {
                "clientId": {
                  "title": "Client ID",
                  "description": "Your Service Principal App ID (Client ID)",
                  "type": "string"
                },
                "clientSecret": {
                  "title": "Client Secret",
                  "description": "Your Service Principal Password (Client Secret)",
                  "type": "string",
                  "format": "password"
                },
                "tenantId": {
                  "title": "Tenant ID",
                  "description": "Tenant ID of your Azure Subscription",
                  "type": "string"
                },
                "accountName": {
                  "title": "Account Name",
                  "description": "Account Name of your storage account",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "clientId",
                "clientSecret",
                "tenantId",
                "accountName"
              ]
            },
            "prefixConfig": {
              "title": "Storage Metadata Prefix Config",
              "$ref": "#/properties/storageMetadataConfigSource/oneOf/3/properties/prefixConfig"
            }
          },
          "additionalProperties": false,
          "required": [
            "prefixConfig"
          ]
        }
      ]
    }
  },
  "additionalProperties": false
}